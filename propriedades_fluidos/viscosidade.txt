function y = mu(t, frac_mol)
%#codegen
%------------------- FUNÇÃO VISCOSIDADE DOS GASES -------------------------
%
%   -Autor: Janderson Honório Mazzine Afonso
%   -Email: janderson.mazzine2015@engenharia.ufjf.br
%   -Ano: 2020
%
%   -Referências: 
%   [1]MATOS, M. A. A. Propriedades termofísicas de algunsgases, sólidos e  
%   da água. Aveiro: Editora da Universidade de Aveiro, 1998.
%   [2]BIRD R. B., WARREN E. S., and EDWIN N. L. Transport Phenomena. 2nd 
%   ed. New York: Jonh Wiley & Sons, 2002.
%   [3]IUPAC. Periodic Table of Elements. Disponivel em
%   <https://iupac.org/what-we-do/periodic-table-of-elements/> Acesso em
%   01 set. 2020.
%
%   -Citar como: AFONSO. Janderson H. M. Vicosidade dos Gases de Combustão
%                Aplicados em Turbinas a Gás. UFJF, 2020.
%   -Versão: 01.09.2020
%
%----------------------- DESCRIÇÃO DA FUNÇÃO ------------------------------
%
%   A presente função retorna a viscosidade dinâmica, em [kg/m.s] de um gás 
%   puro segundo a expressão e coeicientes de regressão apresentados por  
%   Matos [1], e da mistura considerando também a correlação semiempírica 
%   desenvolvida por Wilke e apresentada no livro de Bird [2], considerando 
%   as massas molares dos atomos na tabela da IUPAC [3].
%
%--------------------------- INSTRUÇÕES -----------------------------------
%
%                   [mu] = visc_gas( t, frac_mol)
%
%   A temperatura de entrada deve ser dada em Kelvin [K] e as frações 
%   molares devem ser dada em um vetor com o seguinte formato:
%   
%                 (%N2 %O2 %Ar %Ne %H2O %CO2 %CO %SO2)
%
%   Caso alguma das espécies não faça parte da mistura deve ser atribuido o
%   valor 0 (zero) a sua posição no vetor. A soma das frações de cada espé-
%   cie deve ser sempre igual a 1.
%   
%   Porém, o presente modelo não contempla o gas neônio. Caso seja
%   necessário, deve-se implementar seus coeficientes na matriz.
%
%-------------------- MENSAGEM DE ERRO E AVISOS --------------------------- 
%
%   Uma mensagem de erro será exibida caso a soma das concentrações dos 
%   componentes do gás em estudo seja diferente de 1, ou caso tente-se 
%   computar um gás que possua Neônio em sua composição, o qual não é 
%   contemplado no presente modelo.
%   
%   Um aviso será exibido caso a temperatura desejada da mistura esteja
%   fora do intervalo de temperatura de algum dos gases puros que a compõe,
%   conforme a tabela abaixo:
%
%              Gas	|	T_min (K)	|	T_max (K)
%               ---------------------------------
%               N2 		  250 			  1500
%               O2		  250 			  1500
%               Ar		  250			  1300
%               Ne		  NaN			  NaN
%               H2O 	  400 			  1500
%               CO2 	  250 			  1500 
%               CO		  250 			  1500
%               SO2 	  170 			  1700
%
%---------------------------- EXEMPLOS ------------------------------------
%
%   1)Definir a viscosidade do ar atmosférico considerando uma composição 
%   de Oxigênio (21%) e Nitrogênio (79%) apenas, a 100ºC.
%
%   t = 373.15;
%   f_mol = [0.79 0.21 0 0 0 0 0 0];
%
%   ANS: 21.8025339818354e-006
%   
%--------------------------------------------------------------------------


if  sum(frac_mol) ~= 1 %checa composição informada
    error('A soma das frações de composição é diferente de 1');
elseif frac_mol(4) ~= 0
    error('Erro: Gás Neonio não contemplado no modelo');
end


mm_el = [28.014 31.998 39.95 20.180 33.006 44.009 28.01 64.058]; %massa molar dos gases puros segundo IUPAC 2020, [g/mol]

mu = 0;
cont = 0;
vis = zeros(1, 8);
fm = zeros(1, 8);
mm = zeros(1, 8);
psi_ab = zeros(1, 8);

coef = [0.31619*10^(-5)		0.56192*10^(-7) 	-0.24148*10^(-10)  	0.61370*10^(-14) 	250 	1500;
        0.26918*10^(-5)		0.68519*10^(-7)  	-0.29857*10^(-10) 	0.75600*10^(-14) 	250 	1500;
        0.50458*10^(-5)		0.63459*10^(-7)  	-0.17506*10^(-10) 	0.37009*10^(-14) 	250     1300;
        0                   0                   0                   0                   0       0;
        -0.41991*10^(-5) 	0.45336E-07    		-0.50749*10^(-11) 	0.15526*10^(-14) 	400 	1500;
        -0.16636*10^(-5)	0.63064*10^(-7)  	-0.26223*10^(-10) 	0.58813*10^(-14) 	250 	1500; 
        0.30012*10^(-5)		0.56504*10^(-7)  	-0.23998*10^(-10) 	0.62734*10^(-14) 	250 	1500; 
        0-.37930*10^(-5)	0.46450*10^(-7) 	-0.72760*10^(-11) 	0                   170 	1700];

    for i = 1:8, %percorre espécies
        if frac_mol(i) ~= 0  %evita o cálculo das especies com concentração nula
            cont=cont+1;
            fm(cont)= frac_mol(i);
            mm(cont)= mm_el(i);
            vis(cont)=coef(i,1)+coef(i,2)*t+coef(i,3)*t^2+coef(i,4)*t^3;
            if t<coef(i,5)
                error('A temperatura está abaixo do limite de aplicabilidade do modelo da viscosidade para um dos gases.')
            elseif t>coef(i,6)
                error('A temperatura está acima do limite de aplicabilidade do modelo da viscosidade para um dos gases.')
            end
        end
    end
    
    for a = 1:cont, %calculo psi
        for b = 1:cont,
            psi_ab(a)=psi_ab(a)+fm(b)*((1/sqrt(8))*(1+mm(a)/mm(b))^(-0.5)*(1+(vis(a)/vis(b))^(0.5)*(mm(b)/mm(a))^(0.25))^2);
        end
        mu=mu+((fm(a)*vis(a))/psi_ab(a));
    end
    y = mu;